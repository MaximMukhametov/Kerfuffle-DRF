# Generated by Django 3.0.7 on 2020-06-23 22:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import network_api.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('unique_url_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Url name')),
                ('full_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Full name')),
                ('background_photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='background_photo')),
                ('status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Status')),
                ('is_staff', models.BooleanField(default=False)),
                ('looking_for_a_job', models.BooleanField(blank=True, null=True, verbose_name='Looking for a job')),
                ('looking_for_a_job_description', models.TextField(blank=True, null=True, verbose_name='Looking for a job description')),
            ],
            options={
                'ordering': ['-id'],
            },
            managers=[
                ('objects', network_api.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('github', models.CharField(blank=True, max_length=100, null=True)),
                ('vk', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram', models.CharField(blank=True, max_length=100, null=True)),
                ('twitter', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('youtube', models.CharField(blank=True, max_length=100, null=True)),
                ('mainlink', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small', models.TextField(blank=True, null=True, verbose_name='Small')),
                ('small_img', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Small img')),
                ('large', models.TextField(blank=True, null=True, verbose_name='Large')),
                ('large_img', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Large img')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('like', models.ManyToManyField(related_name='my_likes', related_query_name='my_like', to=settings.AUTH_USER_MODEL, verbose_name='Like')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='my_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('written_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='my_messages', related_query_name='my_message', to=settings.AUTH_USER_MODEL, verbose_name='Written by')),
                ('written_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages_for_me', related_query_name='message_for_me', to=settings.AUTH_USER_MODEL, verbose_name='Written for')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='contacts',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='network_api.Contact'),
        ),
        migrations.AddField(
            model_name='user',
            name='followed',
            field=models.ManyToManyField(blank=True, related_name='followers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='photos',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='network_api.Photo'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
